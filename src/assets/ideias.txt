    if (nomes == 1) {
        for (let i = 0; i < nomes.length; i++) {
            let mensagemInserir = nomes[i];
            console.log(mensagemInserir);

            // CriaÃ§Ã£o do elemento section
            let section02 = document.createElement('section'); // Corrigido: nÃ£o use < > ao criar elementos
            section02.className = 'section02'; // Adiciona a classe

            // CriaÃ§Ã£o do conteÃºdo do section
            section02.innerHTML = `<p type="text" id="text_recebe">${mensagemInserir}</p> <button id="button_excluir" onclick="excluirElemento(this)">ðŸ—‘</button>`;

            // Adiciona a section ao container
            container.appendChild(section02);
        }
    }

    for (let i = 0; i < nomes.length; i++) {
    let mensagemInserir = nomes[i];
    console.log(mensagemInserir);
    }


    

function pegar_dados() {

    var tasks = document.getElementById('text_task').value;

    // Adiciona a nova tarefa no localStorage
    const frases = localStorage.getItem('BD') ? JSON.parse(localStorage.getItem('BD')) : [];

    // ? -> Operador ternÃ¡rio
    // Se for encontrado alguma para em 'BD', execute o comando JSON.parse... . Se for falso, corre para o [] e cria uma array de objetos;

    arrayItens(tasks, frases);
}

function arrayItens(frases, mensagens) {

    const BD = {
        id: mensagens.length + 1,
        msg: frases
    
    };
    mensagens.push(BD);
    
    localStorage.setItem('BD', JSON.stringify(mensagens));

    // Coleta todas as mensagens para exibiÃ§Ã£o
    const nomes = mensagens.map(item => item.msg);
    
    // Para cada item no array mensagens, ele pega apenas o valor da mensagem 'item.msg'
    localStorage.setItem('nomes', JSON.stringify(nomes));

    arrayExibir(nomes);
}

function arrayExibir(nomes) {

    let main = document.getElementById("aqui");

    for (let i = 0; i < nomes.length; i++) {
        let exibir = nomes[i];

        // CriaÃ§Ã£o do elemento section
        let section02 = document.createElement("section");
        section02.className = "section02"; // Adiciona a classe

        // CriaÃ§Ã£o do conteÃºdo do section
        section02.innerHTML = `<p type="text" id="text_recebe">${exibir}</p> <button id="button_excluir" onclick="excluirElemento(this)">ðŸ—‘</button>`;

        // Adiciona a section ao container
        main.appendChild(section02);
    }
}

function excluirElemento(button) {
    // Remove o elemento pai da seÃ§Ã£o
    const section = button.parentElement;
    section.remove();
    localStorage.removeItem(section);
}

